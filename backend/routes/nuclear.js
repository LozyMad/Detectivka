const express = require('express');
const { authenticateToken, superAdminRequired } = require('../middleware/auth');
const { nuclearResetPostgreSQL } = require('../scripts/nuclear_reset_postgresql');

const router = express.Router();

// –í—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã —Ç—Ä–µ–±—É—é—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω—Å–∫–∏—Ö –ø—Ä–∞–≤
router.use(authenticateToken);
router.use(superAdminRequired);

// –Ø–¥–µ—Ä–Ω—ã–π —Å–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
router.post('/reset', async (req, res) => {
    try {
        console.log('üí• –ó–∞–ø—É—Å–∫ —è–¥–µ—Ä–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞ —á–µ—Ä–µ–∑ API...');
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º —è–¥–µ—Ä–Ω—ã–π —Å–±—Ä–æ—Å
        await nuclearResetPostgreSQL();
        
        res.json({ 
            success: true, 
            message: '–Ø–¥–µ—Ä–Ω—ã–π —Å–±—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ! –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã, ID —Å–±—Ä–æ—à–µ–Ω—ã.' 
        });
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —è–¥–µ—Ä–Ω–æ–º —Å–±—Ä–æ—Å–µ:', error);
        res.status(500).json({ 
            success: false, 
            error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —è–¥–µ—Ä–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞: ' + error.message 
        });
    }
});

module.exports = router;

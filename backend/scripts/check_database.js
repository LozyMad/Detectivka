const { query } = require('../config/database');

async function checkDatabase() {
    console.log('üìä –ü–†–û–í–ï–†–ö–ê –°–û–°–¢–û–Ø–ù–ò–Ø –ë–ê–ó–´ –î–ê–ù–ù–´–•...');
    
    try {
        // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        const [usersCount, scenariosCount, addressesCount, roomsCount] = await Promise.all([
            query('SELECT COUNT(*) as count FROM users'),
            query('SELECT COUNT(*) as count FROM scenarios'),
            query('SELECT COUNT(*) as count FROM addresses'),
            query('SELECT COUNT(*) as count FROM rooms')
        ]);
        
        console.log('\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
        console.log(`üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${usersCount.rows[0].count}`);
        console.log(`üé≠ –°—Ü–µ–Ω–∞—Ä–∏–µ–≤: ${scenariosCount.rows[0].count}`);
        console.log(`üè† –ê–¥—Ä–µ—Å–æ–≤: ${addressesCount.rows[0].count}`);
        console.log(`üè† –ö–æ–º–Ω–∞—Ç: ${roomsCount.rows[0].count}`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const users = await query('SELECT id, username, admin_level, is_admin FROM users');
        console.log('\nüë§ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò:');
        if (users.rows.length === 0) {
            console.log('   (–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)');
        } else {
            users.rows.forEach(user => {
                console.log(`   ID: ${user.id}, –õ–æ–≥–∏–Ω: ${user.username}, –†–æ–ª—å: ${user.admin_level}, –ê–¥–º–∏–Ω: ${user.is_admin}`);
            });
        }
        
        console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
    }
}

module.exports = { checkDatabase };

// –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é, –≤—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
if (require.main === module) {
    checkDatabase().catch(console.error);
}

const bcrypt = require('bcryptjs');
const { query } = require('../config/database');

async function createSuperAdmin() {
    console.log('üëë –°–û–ó–î–ê–ù–ò–ï –°–£–ü–ï–†–ê–î–ú–ò–ù–ê...');
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω
        const existingAdmin = await query('SELECT * FROM users WHERE admin_level = "superadmin"');
        
        if (existingAdmin.rows.length > 0) {
            console.log('‚úÖ –°—É–ø–µ—Ä–∞–¥–º–∏–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', existingAdmin.rows[0].username);
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞
        const username = 'admin';
        const password = 'admin123';
        const hashedPassword = bcrypt.hashSync(password, 10);
        
        await query(
            'INSERT INTO users (username, password, is_admin, admin_level) VALUES (?, ?, ?, ?)',
            [username, hashedPassword, true, 'superadmin']
        );
        
        console.log('‚úÖ –°—É–ø–µ—Ä–∞–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
        console.log('üìã –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:');
        console.log('   üë§ –õ–æ–≥–∏–Ω: admin');
        console.log('   üîë –ü–∞—Ä–æ–ª—å: admin123');
        console.log('   üé≠ –†–æ–ª—å: superadmin');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞:', error);
    }
}

module.exports = { createSuperAdmin };

// –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é, –≤—ã–ø–æ–ª–Ω—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ
if (require.main === module) {
    createSuperAdmin().catch(console.error);
}

const { query, getClient } = require('../config/postgresql');

async function nuclearResetPostgreSQL() {
    console.log('üí• –Ø–î–ï–†–ù–´–ô –°–ë–†–û–° PostgreSQL: –ü–û–õ–ù–û–ï –£–ù–ò–ß–¢–û–ñ–ï–ù–ò–ï –í–°–ï–• –î–ê–ù–ù–´–• –ò ID...');
    console.log('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ –∏ —Å–±—Ä–æ—Å–∏—Ç –í–°–ï ID!');
    
    const client = await getClient();
    
    try {
        await client.query('BEGIN');
        
        // 1. –£–¥–∞–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü (–≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –∏–∑-–∑–∞ –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π)
        console.log('\nüí• –£–Ω–∏—á—Ç–æ–∂–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ...');
        
        // –£–¥–∞–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—ã —Å –≤–Ω–µ—à–Ω–∏–º–∏ –∫–ª—é—á–∞–º–∏ —Å–Ω–∞—á–∞–ª–∞
        await client.query('DELETE FROM game_choices');
        console.log('   üí• game_choices –æ—á–∏—â–µ–Ω–∞');
        
        await client.query('DELETE FROM question_answers');
        console.log('   üí• question_answers –æ—á–∏—â–µ–Ω–∞');
        
        await client.query('DELETE FROM visited_locations');
        console.log('   üí• visited_locations –æ—á–∏—â–µ–Ω–∞');
        
        await client.query('DELETE FROM visit_attempts');
        console.log('   üí• visit_attempts –æ—á–∏—â–µ–Ω–∞');
        
        await client.query('DELETE FROM room_users');
        console.log('   üí• room_users –æ—á–∏—â–µ–Ω–∞');
        
        await client.query('DELETE FROM rooms');
        console.log('   üí• rooms –æ—á–∏—â–µ–Ω–∞');
        
        await client.query('DELETE FROM questions');
        console.log('   üí• questions –æ—á–∏—â–µ–Ω–∞');
        
        await client.query('DELETE FROM addresses');
        console.log('   üí• addresses –æ—á–∏—â–µ–Ω–∞');
        
        await client.query('DELETE FROM admin_permissions');
        console.log('   üí• admin_permissions –æ—á–∏—â–µ–Ω–∞');
        
        await client.query('DELETE FROM scenarios');
        console.log('   üí• scenarios –æ—á–∏—â–µ–Ω–∞');
        
        // –£–¥–∞–ª—è–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫—Ä–æ–º–µ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞
        await client.query('DELETE FROM users WHERE admin_level != $1', ['super_admin']);
        console.log('   üí• users –æ—á–∏—â–µ–Ω–∞ (–∫—Ä–æ–º–µ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞)');

        // 2. –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (–∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç) –¥–ª—è –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
        console.log('\nüîÑ –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç ID...');
        
        const sequences = [
            'users_id_seq',
            'scenarios_id_seq', 
            'rooms_id_seq',
            'room_users_id_seq',
            'addresses_id_seq',
            'questions_id_seq',
            'question_answers_id_seq',
            'visited_locations_id_seq',
            'visit_attempts_id_seq',
            'game_choices_id_seq',
            'admin_permissions_id_seq'
        ];
        
        for (const seq of sequences) {
            try {
                await client.query(`SELECT setval('${seq}', 1, false)`);
                console.log(`   ‚úÖ ${seq} —Å–±—Ä–æ—à–µ–Ω–∞`);
            } catch (err) {
                // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –µ—Å–ª–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                console.log(`   ‚ö†Ô∏è  ${seq} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (–ø—Ä–æ–ø—É—Å–∫–∞–µ–º)`);
            }
        }

        // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω –æ—Å—Ç–∞–ª—Å—è
        console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞...');
        const adminResult = await client.query('SELECT id, username, admin_level FROM users WHERE admin_level = $1', ['super_admin']);
        
        if (adminResult.rows.length > 0) {
            console.log('‚úÖ –°—É–ø–µ—Ä–∞–¥–º–∏–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', adminResult.rows[0]);
        } else {
            console.log('‚ùå –û–®–ò–ë–ö–ê: –°—É–ø–µ—Ä–∞–¥–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–æ–∑–¥–∞–µ–º...');
            
            const bcrypt = require('bcryptjs');
            const hashedPassword = bcrypt.hashSync('admin123', 10);
            
            await client.query(
                'INSERT INTO users (id, username, password, is_admin, admin_level) VALUES ($1, $2, $3, $4, $5)',
                [1, 'admin', hashedPassword, true, 'super_admin']
            );
            console.log('‚úÖ –°—É–ø–µ—Ä–∞–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω —Å ID 1');
        }

        // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        console.log('\nüìä –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê:');
        const stats = await Promise.all([
            client.query('SELECT COUNT(*) as count FROM users'),
            client.query('SELECT COUNT(*) as count FROM scenarios'),
            client.query('SELECT COUNT(*) as count FROM addresses'),
            client.query('SELECT COUNT(*) as count FROM rooms'),
            client.query('SELECT COUNT(*) as count FROM game_choices')
        ]);

        console.log(`üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${stats[0].rows[0].count}`);
        console.log(`üé≠ –°—Ü–µ–Ω–∞—Ä–∏–µ–≤: ${stats[1].rows[0].count}`);
        console.log(`üè† –ê–¥—Ä–µ—Å–æ–≤: ${stats[2].rows[0].count}`);
        console.log(`üè† –ö–æ–º–Ω–∞—Ç: ${stats[3].rows[0].count}`);
        console.log(`üéØ –í—ã–±–æ—Ä–æ–≤: ${stats[4].rows[0].count}`);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞
        const admin = await client.query('SELECT id, username, admin_level FROM users WHERE admin_level = $1', ['super_admin']);
        console.log(`üëë –°—É–ø–µ—Ä–∞–¥–º–∏–Ω: ID ${admin.rows[0].id}, –õ–æ–≥–∏–Ω: ${admin.rows[0].username}, –†–æ–ª—å: ${admin.rows[0].admin_level}`);

        await client.query('COMMIT');
        
        console.log('\nüéâ –Ø–î–ï–†–ù–´–ô –°–ë–†–û–° PostgreSQL –ó–ê–í–ï–†–®–ï–ù!');
        console.log('üí• –í–°–ï –¥–∞–Ω–Ω—ã–µ —É–Ω–∏—á—Ç–æ–∂–µ–Ω—ã, –í–°–ï ID —Å–±—Ä–æ—à–µ–Ω—ã!');
        console.log('üöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∏–≥—Ä—ã —Å ID –Ω–∞—á–∏–Ω–∞—è —Å 1!');
        console.log('üìã –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞: admin / admin123');

    } catch (error) {
        await client.query('ROLLBACK');
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —è–¥–µ—Ä–Ω–æ–º —Å–±—Ä–æ—Å–µ PostgreSQL:', error);
        throw error;
    } finally {
        client.release();
    }
}

module.exports = { nuclearResetPostgreSQL };

// –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é, –≤—ã–ø–æ–ª–Ω—è–µ–º —Å–±—Ä–æ—Å
if (require.main === module) {
    nuclearResetPostgreSQL().catch(console.error);
}

#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è Git –∫–æ–º–∞–Ω–¥
function runGitCommand(command) {
  try {
    const result = execSync(command, { 
      encoding: 'utf8',
      cwd: process.cwd()
    });
    return result.trim();
  } catch (error) {
    console.error(`Git command failed: ${command}`);
    console.error(error.message);
    return null;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–º–º–∏—Ç–∞
function autoCommit() {
  console.log('üîÑ Starting auto-commit process...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Git
  const status = runGitCommand('git status --porcelain');
  if (!status) {
    console.log('‚ùå Git not available or not a git repository');
    return;
  }
  
  if (!status.trim()) {
    console.log('‚úÖ No changes to commit');
    return;
  }
  
  console.log('üìù Changes detected:');
  console.log(status);
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
  runGitCommand('git add .');
  
  // –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç
  const timestamp = new Date().toISOString();
  const commitMessage = `Auto-commit: ${timestamp}`;
  
  const commitResult = runGitCommand(`git commit -m "${commitMessage}"`);
  if (commitResult) {
    console.log('‚úÖ Commit created successfully');
    
    // –ü—É—à–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    const pushResult = runGitCommand('git push');
    if (pushResult) {
      console.log('üöÄ Changes pushed to remote');
    } else {
      console.log('‚ùå Failed to push changes');
    }
  } else {
    console.log('‚ùå Failed to create commit');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–∏—Ç
if (require.main === module) {
  autoCommit();
}

module.exports = { autoCommit };

